#MySQL: Após o "?", existem algumas propriedades. A primeira é da criação de um BD caso já não exista, que é uma
# propriedade própria do MySQL, ou seja, se usar outro SGBD, muito provavelmente não funcione. O segundo (useSSL) é exigida
#por algumas versões do SGBD do MySQL. Se não utilizarmos uma URL que não seja do tipo HTTPS, então devemos coloca-la como
# false. Já o server Timezone, também é uma propriedade requerida por algumas versões do MySQL para que você informe qual
#o tipo de timezone que vai utilizar.
spring.datasource.url = jdbc:mysql://localhost:3306/ajaxdb?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username= root
spring.datasource.password=

#JPA: mudança de valor pois quando criamos o BD por fora do hibernate é sempre ideal 
#não usar a instrução update para que nenhuma alteração adicional seja feita na tabela 
#por qualquer tipo de descuido.
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
#este tem o objetivo de gerenciar as transações quando temos
#relacionamento do tipo 1 -> N e N -> N no modo Laze. Assim 
#vc evita as exceções do tipo LAZE exception.
spring.jpa.open-in-view=true

# THYMELEAF (ThymeleafAutoConfiguration).
# Este cache ajuda muito quando estamos em
# tempo de desenvolvimento. Mas quando vamos
# Subir para a produção, isso pode causar
# Problemas, pois pode ser que ocorra alguma atualização
# no codigo fonte e quando é atualizado na página, ao invés
# de pegar a atualização podemos estar lendo algo que esteja em cache
# Então para que isso não venha acontecer, iremos deixá-lo para FALSE.
spring.thymeleaf.cache=false